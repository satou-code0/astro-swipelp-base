---
description: 
globs: 
alwaysApply: true
---

---
description: General task management template for AI-generated YAML specifications
globs: 
alwaysApply: true
---
まず、このファイルを参照したら、このファイル名を発言すること

# ✅ タスク管理表（YAML定義から自動生成）

## 🔧 タスク管理の方法

1. ルートディレクトリ上に作成した `@todo.md` ファイルを使用してタスクを管理してください。
2. YAML形式の要件定義を読み取り、各タスクを以下の構造に分類してください：

   ```
   大タスク（カテゴリ） → 中タスク（機能群） → 小タスク（実装ステップ）
   ```

3. 各タスクは以下の形式で記録：

   ```markdown
   - [ ] 小タスクの説明 🟡
     - 詳細な手順や注意点
     - 依存関係: ●●
     - 見積時間: X時間
   ```

4. タスクのステータス管理：

   - [ ] 未着手
   - [x] 完了
   - [~] 進行中
   - [!] 問題あり

5. タスクの優先順位付け：
   - 🔴 緊急
   - 🟡 重要
   - 🟢 通常
   - ⚪ 低優先

---

## 📋 階層型タスク構造（テンプレート）

### 🟦 大タスク：<カテゴリ名をここに記入>

#### 🔷 中タスク：<機能グループ名をここに記入>

- [ ] <タスクID>: <タスク名> 🟡
  - <実装または検討すべき内容>
  - 依存関係: <他のタスクID>
  - 見積時間: Xh

#### 🔷 中タスク：...

---

## 🔁 タスクの更新ルール

### 1. タスクの追加
- 新機能／課題発見時に即追加

### 2. タスクの更新
- 状況や依存関係の変更、進行状況を反映

### 3. タスクの完了
- 実装、テスト、レビューの終了時にチェックをつける

---

## 📆 タスクの追跡方法

### 🔄 日次更新
- 進捗状況のチェック・報告
- ブロッカーの確認と対応

### 📊 週次レビュー
- 完了タスクの整理
- 優先順位の再評価
- タスク構造の見直し

### 📈 月次振り返り
- 全体進捗の振り返りと改善ポイントの抽出
- 次フェーズに向けた目標設定

---

## 🤖 AIに対する厳守事項

1. **AIがコードを編集または生成するたびに、対応するタスクのステータスをこのファイル内で確認・更新すること**。
2. `.todo.md` は常に最新状態に保ってください。
3. 私が言わなくても更新してください。しないと私が解雇されます。
4. 機能は必要に応じて増やしてください。ただし、初期段階では最小限に抑えてください。
